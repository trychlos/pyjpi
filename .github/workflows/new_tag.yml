# This Github action is triggered when a new (non release-candidate, aka not '-rc') tag is pushed in master branch:
# - define a new Github release
# - compute tests coverage
# - compute code complexity
# - publishes the library on test.pypi
# - publishes the library on pypi.

name: New tag

env:
  CACHE_VERSION: 1
  PRE_COMMIT_HOME: ~/.cache/pre-commit
  VENV: venv

on:
  workflow_dispatch:
  create:

jobs:
  gate:
    if: ${{ github.event_name == 'workflow_dispatch' || (startsWith(github.ref, 'refs/tags/') && !contains(github.ref_name, '-rc')) }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "gate passed"

  shellcheck:
    name: Shellcheck
    needs: gate
    runs-on: ubuntu-latest
    steps:
      - name: Check out committed code
        uses: actions/checkout@v5
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

  pytest:
    name: Run pytest using Python ${{ matrix.python-version }}
    needs: gate
    runs-on: ubuntu-latest
    container: python:3.13-slim
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - name: Check out committed code
        uses: actions/checkout@v5
      - name: Prepare python
        run: |
          pip install uv
          uv venv --seed venv
          . venv/bin/activate
          uv pip install -r requirements.txt -r requirements-test.txt
      - name: Run all tests
        run: |
          . venv/bin/activate
          pytest --log-level info tests/ --cov='pyjpi/'
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: .coverage
          if-no-files-found: error
          include-hidden-files: true

  coverage:
    name: Process test coverage
    needs: pytest
    runs-on: ubuntu-latest
    container: python:3.13-slim
    steps:
      - name: Check out committed code
        uses: actions/checkout@v5
      - name: Prepare python
        run: |
          pip install uv
          uv venv --seed venv
          . venv/bin/activate
          uv pip install -r requirements.txt -r requirements-test.txt
      - name: Download all coverage artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: coverage-*
          merge-multiple: true
          path: ${{ github.workspace }}/artifacts
      - name: Combine coverage results
        run: |
          . venv/bin/activate
          coverage combine artifacts/.coverage*
          coverage report --fail-under=85
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          slug: trychlos/pyjpi
