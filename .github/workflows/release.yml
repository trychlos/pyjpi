# This Github action is triggered when a new release is defined:
# - run tests, compute coverage and complexity
# - publishes the library on pypi.

name: New release

env:
  VENV: venv

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  tests:
    uses: ./.github/workflows/_tests.yml
    secrets:
      codecov_token: "${{ secrets.CODECOV_TOKEN }}"

  check_exists:
    needs:
      - tests
    runs-on: ubuntu-latest
    container: python:3.13-slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Prepare Python
        run: |
          pip install -q uv
          uv venv --seed $VENV
          . $VENV/bin/activate
          uv pip install toml
      - name: Install curl/jq
        run: |
          apt-get update
          apt-get install -y curl jq
      - name: Check if version already exists
        id: check_exists
        run: |
          . $VENV/bin/activate
          PACKAGE_VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          PACKAGE_NAME=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['name'])")
          echo "Checking: $PACKAGE_NAME==$PACKAGE_VERSION"
          if curl -s "https://pypi.org/pypi/$PACKAGE_NAME/json" | jq -r '.releases | keys[]' | grep -q "^$PACKAGE_VERSION$"; then
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi

  build:
    needs:
      - check_exists
    if: needs.check_exists.outputs.should_publish == 'true'
    uses: ./.github/workflows/_build.yml
    with:
      path: dist/

  publishing:
    name: Publish to PyPI
    needs:
      - check_exists
      - build
    if: needs.check_exists.outputs.should_publish == 'true'
    runs-on: ubuntu-latest
    container: python:3.13-slim
    environment:
      name: pypi
      url: https://pypi.org/p/pyjpi
    permissions:
        id-token: write
    steps:
      - name: Get the pre-built distribution
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish ðŸ“¦ to PyPI
        # uses: pypa/gh-action-pypi-publish@release/v1.13
        run: |
          pip install -q uv
          uv venv --seed $VENV
          . $VENV/bin/activate
          uv publish
