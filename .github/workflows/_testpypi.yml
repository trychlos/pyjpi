name: _testpypi
on:
  workflow_call: {}

jobs:
  testpypi:
    runs-on: ubuntu-latest
    container: python:${{ inputs.py-version }}-slim
    environment: testpypi
    permissions:
      id-token: write
    outputs:
      should_publish: ${{ steps.flag.outputs.should_publish }}
    steps:
      - uses: actions/checkout@v5
      - name: Prepare python
        run: |
          pip install uv
          uv venv --seed venv
          . venv/bin/activate
          uv pip install toml
      - name: Install deps
        run: |
          apt-get update
          apt-get install -y curl jq
      - name: Check for existing version on TestPyPI
        id: check
        run: |
          . venv/bin/activate
          PACKAGE_VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          PACKAGE_NAME=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['name'])")
          if curl -s "https://test.pypi.org/pypi/$PACKAGE_NAME/json" | jq -r '.releases | keys[]' | grep -q "^$PACKAGE_VERSION$"; then
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi
      - id: flag
        run: echo "should_publish=${{ steps.check.outputs.should_publish }}" >> $GITHUB_OUTPUT
      - name: Build
        if: steps.check.outputs.should_publish == 'true'
        run: |
          . venv/bin/activate
          uv build
      - name: Publish to TestPyPI
        if: steps.check.outputs.should_publish == 'true'
        run: |
          . venv/bin/activate
          uv publish --publish-url https://test.pypi.org/legacy/
